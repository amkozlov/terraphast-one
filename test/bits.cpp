#include <catch.hpp>

#include "../lib/bits.hpp"

namespace terraces {
namespace tests {

using bits::popcount;
using bits::bitscan;
using bits::rbitscan;
using bits::partial_popcount;
using bits::next_bit;
using bits::has_next_bit;

TEST_CASE("popcount", "[bits]") {
	CHECK(popcount(0b1010111010101101010001010100000101000011000010111100000101001000ll) == 26);
	CHECK(popcount(0b0000000000000000000000000000000000000000000000000000000000000000ll) == 0);
	CHECK(popcount(0b0000001000000100000000000010000000001000000000001000000010001100ll) == 8);
}

TEST_CASE("bitscan", "[bits]") {
	CHECK(bitscan(0b0100000000000000000000000000000000000000000000000000000000000000ll) == 62);
	CHECK(bitscan(0b0000000000000000000000000000000000000000000000000000100000000000ll) == 11);
	CHECK(bitscan(0b0001000000000000010000000000000000000000000000000000000000000000ll) == 46);

	CHECK(rbitscan(0b0100000000000000000000000000000000000000000000000000000000000000ll) == 62);
	CHECK(rbitscan(0b0000000000000000000000000000000000000000000000000000100000000000ll) == 11);
	CHECK(rbitscan(0b0001000000000000010000000000000000000000000000000000000000000000ll) == 60);
}

TEST_CASE("prefix_mask", "[bits]") {
	CHECK(bits::prefix_mask(63) ==
	      0b0111111111111111111111111111111111111111111111111111111111111111ll);
	CHECK(bits::prefix_mask(1) ==
	      0b0000000000000000000000000000000000000000000000000000000000000001ll);
	CHECK(bits::prefix_mask(10) ==
	      0b0000000000000000000000000000000000000000000000000000001111111111ll);
}

TEST_CASE("partial_popcount", "[bits]") {
	//              6666555555555544444444443333333333222222222211111111110000000000
	//              3210987654321098765432109876543210987654321098765432109876543210
	CHECK(bits::partial_popcount(
	              0b1010111010101101010001010100000101000011000010111100000101001000ll, 63) ==
	      25);
	CHECK(bits::partial_popcount(
	              0b1010111010101101010001010100000101000011000010111100000101001000ll, 62) ==
	      25);
	CHECK(bits::partial_popcount(
	              0b1010111010101101010001010100000101000011000010111100000101001000ll, 60) ==
	      24);
	CHECK(bits::partial_popcount(
	              0b1010111010101101010001010100000101000011000010111100000101001000ll, 49) ==
	      17);
}

TEST_CASE("next_bit", "[bits]") {
	CHECK(bits::has_next_bit(
	        0b0000000000000000000000000000000000010000000000000000000000000000ll, 28));
	CHECK(!bits::has_next_bit(
	        0b0000000000000000000000000000000000010000000000000000000000000000ll, 29));
	//                     6666555555555544444444443333333333222222222211111111110000000000
	//                     3210987654321098765432109876543210987654321098765432109876543210
	CHECK(bits::next_bit(0b1010111010101101010001010100000101000011000010111100000101001001ll,
	                     64) == 64);
	CHECK(bits::next_bit(0b1010111010101101010001010100000101000011000010111100000101001000ll,
	                     0) == 3);
	CHECK(bits::next_bit(0b1010111010101101010001010100000101000011000010111100000101001000ll,
	                     29) == 30);
	CHECK(bits::next_bit(0b1010111010101101010001010100000101000011000010111100000101001000ll,
	                     55) == 55);
	CHECK(bits::next_bit(0b1010111010101101010001010100000101000011000010111100000101001000ll,
	                     56) == 57);
}

} // namespace tests
} // namespace terraces
